use x > n
x[use]
}
x < 1:20
add2<- function(x, y) {
x +y
}
# this is giving you any number above 10
# a logical vecto of trues and falses of which are or are not above 10
above10 <- function(x) {
use <- x>10
x[use]
}
#Extraction of a number
above <- function(x, n){
use x > n
x[use]
}
above <- function(x, n = 10){
use x > n
x[use]
}
above(x)
above <- function(x, n = 10){
use x > n
x[use]
}
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
x <- (1:20)
above(x)
bye()
exit
source('~/R_Coursera Files/Functions.R')
exit()
?exit
?
ls(environment(cube))
ls(environment(cube))
"n" "pwr"
ls(environment(cube))
make.pwr<-function(n)
{}
?optim
source('~/R_Coursera Files/Functions.R')
info(time)
?dates
?"date"
date()
if(x > 3) {
y <- 10
}
else
{
y <- 0
}
if(x > 3) {
10
}
else {
0
}
if(x > 3) {
10
}
else {
0
}
source('~/R_Coursera Files/Functions.R')
for(i in 1:10) {
print(i)
}
cube <- function(x, n) {
x^3
}
print(cube)
x<-2
print(cube)
cube
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
source('~/R_Coursera Files/RAssign1/specdata/001.csv', encoding = 'UTF-8')
set.speed(1)
set.speed(1)
makeCacheMatrix <- function(x = matrix()) {
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x=matrix(), ...) {
m<-x$getmatrix()
if(!is.null(m)){
message("getting cached data")
return(m)
}
matrix <- x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
library(datasets)
data(iris)
?iris
print(iris)
?mean()
mean('sepal.length', 101:150)
x<-c(101:150, 49)
xm <- mean(x)
xm
mean(iris('sepal.length', 101:150))
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
library(datasets)
> data(mtcars)
> mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
data(mtcars)
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
debug(ls)
ls
ls(h)
library(swirl)
bye
bye()
`
library(swirl)
?1s
?ls()
esc
library(swirl)
swirl
library(swirl)
rm(list=ls())
swirl()
c(44, NA, 5, NA)
x<-c(44, NA, 5, NA)
x*3
bye()
library(swirl)
swirl
swirl()
y<-rnorm)(1000)
y <- rnorm(1000)
z<-rep(NA, 1000)
my_data<-sample(c(y, z), 100)
my_na<-is.na(my_data)
print(my_na)
my_na
my_data == NA
sum(my_na)
print(my_data)
my_data
0/0
Inf-Inf
bye()
exit
quit
quit()
library()
swirl()
library(swirl)
swirl
swirl
library(swirl)
swirl()
bye()
library(swirl)
swirl
swirl()
?True
?==
True == TRUE
x == X
TRUE <-x
True == 1
?
info (==)
info(==)
info(True)
rue
True == 1
x <- c(1:10)
x
x>8
info()
TrUE == TRUE
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !== 7
!5 == 7
TRUE & TRUE
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
c(TRUE, TRUE, TRUE) & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
bye()
install.packages("rfordummies")
rfordummies()
swirl
library(swirl)
library(rfordummies)
rfordummies()
rfordummies
swirl()
ExData_Plotting1 <- read.table("C:\\Users\\cwatkin\\AppData\\Local\\Temp\\RtmpgVg74A\\data21285c0235b", header=TRUE, quote="\"")
View(ExData_Plotting1)
ExData_Plotting1 <- read.table("C:\\Users\\cwatkin\\AppData\\Local\\Temp\\RtmpgVg74A\\data212817b622bd", header=TRUE, quote="\"")
View(ExData_Plotting1)
git clone https://github.com/casey645/ExData_Plotting1.git
setwd("~/R_Coursera Files/GettingandCleaning-Data")
01 ## Plot Top 10 IP addresses from RFI attacker logs
setwd("~/R/RFIAnalysis")
top10 <- head(srt,10)
setwd("~/R/RFIAnalysis")
theme(plot.title=element_text(face="bold", size=15))
library(data.table)
library(plyr)
library(ggplot2)
setwd("~/R/RFIAnalysis")
rfi <- read.csv("rfi-extract-July2011.log",header=TRUE, sep=",")
## read in data to frame
data <- data.table(rfi)
ct <- count(data$IPAddress)
srt <- ct[order(ct$freq, decreasing = TRUE), ]
top10 <- head(srt,10)
ggplot(data=top10, aes(x=x, y=freq, fill=x))
geom_histogram(stat="identity", colour="black", show_guide=FALSE)
scale_fill_brewer(palette="RdYlGn") + xlab("IP Addresses")
ylab("Attack Frequency")
theme(axis.text.x = element_text(angle = 45, hjust = 1, color="blue"))
theme(axis.text.y = element_text(face = "bold", color="blue"))
ggtitle("Top 10 RFI Attackers by IP")
theme(plot.title=element_text(face="bold", size=15))
setwd("~/R/RFIAnalysis")
setwd("~/R_Coursera Files/ExploreDataAnal")
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
file.dest <- 'power.consumption.zip'
download.file( file.url, file.dest )
source.file <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
# 2. read the data into R, save, and remove source file
Power.Consumption <- read.table( source.file, header = TRUE, sep = ';', na.strings = '?' )
save( Power.Consumption, file = 'Power.Consumption.RData' )
file.remove( source.file )
rm(source.file)
# 3. rename variables, recode some the data, subset for relevant dates
new.names <- gsub( '_', '.', names(Power.Consumption)  )
new.names <- tolower( new.names )
names( Power.Consumption ) <- new.names
rm(new.names)
# recode dates and times
Power.Consumption$date <- as.Date (Power.Consumption$date, '%d/%m/%Y' )
Power.Consumption <- subset( Power.Consumption, date == '2007-02-01' | date == '2007-02-02' )
Power.Consumption$date.time <- strptime(
paste(
Power.Consumption$date,
Power.Consumption$time
),
format="%Y-%m-%d %H:%M:%S"
)
# save again
save( Power.Consumption, file = 'Power.Consumption.RData' )
# 4. plot the data
png( 'plot1.png' )
hist( Power.Consumption$global.active.power,
col = 'red',
main = 'Global Active Power',
xlab = 'Global Active Power (kilowatts)'
)
dev.off()
# Plot2.R
# Purpose of this file is as follows
# 1. download data from UCI Machine Learning Repository
# 2. read the data into R
# 3. inspect and recode the data
# 4. plot the data
# 1. download the data, unzip, delete zip file
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
file.dest <- 'power.consumption.zip'
download.file( file.url, file.dest )
source.file <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
# 2. read the data into R, save, and remove source file
Power.Consumption <- read.table( source.file, header = TRUE, sep = ';', na.strings = '?' )
save( Power.Consumption, file = 'Power.Consumption.RData' )
file.remove( source.file )
rm(source.file)
# 3. rename variables, recode some the data, subset for relevant dates
new.names <- gsub( '_', '.', names(Power.Consumption)  )
new.names <- tolower( new.names )
names( Power.Consumption ) <- new.names
rm(new.names)
# recode dates and times
Power.Consumption$date <- as.Date (Power.Consumption$date, '%d/%m/%Y' )
Power.Consumption <- subset( Power.Consumption, date == '2007-02-01' | date == '2007-02-02' )
Power.Consumption$date.time <- strptime(
paste(
Power.Consumption$date,
Power.Consumption$time
),
format="%Y-%m-%d %H:%M:%S"
)
# save again
save( Power.Consumption, file = 'Power.Consumption.RData' )
# 4. plot the data
png( 'plot2.png' )
plot(Power.Consumption$date.time,
Power.Consumption$global.active.power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)'
)
dev.off()
# 3. inspect and recode the data
## File Name: Plot3.R
#Created by: Casey Watkins
#Purpose of this file is to accomplish the following:
#
# 1. download data from UCI Machine Learning Repository
# 2. read the data into R
# 3. inspect and recode the data
# 4. plot the data
# 1. download the data, unzip, delete zip file
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
file.dest <- 'power.consumption.zip'
download.file( file.url, file.dest )
source.file <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
# 2. read the data into R, save, and remove source file
Power.Consumption <- read.table( source.file, header = TRUE, sep = ';', na.strings = '?' )
save( Power.Consumption, file = 'Power.Consumption.RData' )
file.remove( source.file )
rm(source.file)
# 3. rename variables, recode some the data, subset for relevant dates
new.names <- gsub( '_', '.', names(Power.Consumption)  )
new.names <- tolower( new.names )
names( Power.Consumption ) <- new.names
rm(new.names)
# recode dates and times
Power.Consumption$date <- as.Date (Power.Consumption$date, '%d/%m/%Y' )
Power.Consumption <- subset( Power.Consumption, date == '2007-02-01' | date == '2007-02-02' )
Power.Consumption$date.time <- strptime(
paste(
Power.Consumption$date,
Power.Consumption$time
),
format="%Y-%m-%d %H:%M:%S"
)
# save again
save( Power.Consumption, file = 'Power.Consumption.RData' )
# 4. plot the data
png( 'plot3.png' )
plot(Power.Consumption$date.time,
Power.Consumption$sub.metering.1,
type = 'l',
xlab = '',
ylab = 'Energy sub metering'
)
lines(Power.Consumption$date.time,
Power.Consumption$sub.metering.2,
type = 'l',
col = 'red'
)
lines(Power.Consumption$date.time,
Power.Consumption$sub.metering.3,
type = 'l',
col = 'blue'
)
legend('topright',
lty = c(1, 1, 1),
col = c('black', 'blue', 'red'),
legend = c('Metering 1', 'Metering 2', 'Metering 3') )
dev.off()
## File Name: Plot4.R
#Created by: Casey Watkins
#Purpose of this file is to accomplish the following:
#
# 1. download data from UCI Machine Learning Repository
# 2. read the data into R
# 3. inspect and recode the data
# 4. plot the data
## 1. download the data, unzip, delete zip file
file.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip'
file.dest <- 'power.consumption.zip'
download.file( file.url, file.dest )
source.file <- unzip( file.dest, list = TRUE )$Name
unzip( file.dest )
file.remove( file.dest )
rm(file.url)
rm(file.dest)
## 2. read the data into R, save, and remove source file
Power.Consumption <- read.table( source.file, header = TRUE, sep = ';', na.strings = '?' )
save( Power.Consumption, file = 'Power.Consumption.RData' )
file.remove( source.file )
rm(source.file)
## 3. rename variables, recode some the data, subset for relevant dates
new.names <- gsub( '_', '.', names(Power.Consumption)  )
new.names <- tolower( new.names )
names( Power.Consumption ) <- new.names
rm(new.names)
## recode dates and times
Power.Consumption$date <- as.Date (Power.Consumption$date, '%d/%m/%Y' )
Power.Consumption <- subset( Power.Consumption, date == '2007-02-01' | date == '2007-02-02' )
Power.Consumption$date.time <- strptime(
paste(
Power.Consumption$date,
Power.Consumption$time
),
format="%Y-%m-%d %H:%M:%S"
)
## Resave
save( Power.Consumption, file = 'Power.Consumption.RData' )
## 4. plot the data
attach(Power.Consumption)
png( 'plot4.png' )
par(mfrow=c(2,2))
plot(date.time,
global.active.power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)'
)
plot(date.time,
voltage,
type = 'l',
)
plot(date.time,
sub.metering.1,
type = 'l',
xlab = '',
ylab = 'Energy sub metering'
)
lines(date.time,
sub.metering.2,
type = 'l',
col = 'red'
)
lines(date.time,
sub.metering.3,
type = 'l',
col = 'blue'
)
legend('topright',
lty = c(1, 1, 1),
col = c('black', 'blue', 'red'),
legend = c('Metering 1', 'Metering 2', 'Metering 3')
)
plot(date.time,
global.reactive.power,
type = 'l'
)
dev.off()
detach(Power.Consumption)
